# Generated by Django 3.2 on 2025-04-24 11:31

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Attraction',
            fields=[
                ('attraction_id', models.AutoField(primary_key=True, serialize=False)),
                ('attraction_name', models.CharField(max_length=255, verbose_name='景点名称')),
                ('attraction_lng', models.FloatField(verbose_name='景点经度')),
                ('attraction_lat', models.FloatField(verbose_name='景点纬度')),
                ('address', models.CharField(max_length=255, verbose_name='景点地址')),
                ('description', models.TextField(blank=True, default=None, null=True, verbose_name='景点描述')),
                ('category', models.SmallIntegerField(choices=[(1, '自然风光'), (2, '历史遗迹'), (3, '文化遗产'), (4, '娱乐体验')], verbose_name='景点类别')),
                ('fee', models.FloatField(blank=True, default=None, null=True, verbose_name='景点门票')),
                ('open_time', models.TimeField(verbose_name='开放时间')),
                ('close_time', models.TimeField(verbose_name='关闭时间')),
                ('flow_limit', models.IntegerField(verbose_name='人流量限制')),
                ('status', models.SmallIntegerField(choices=[(0, '未开放'), (1, '开放中'), (2, '人流预警')], default=0, verbose_name='景点状态')),
                ('count', models.IntegerField(default=0, verbose_name='景点实时人数')),
                ('phone', models.CharField(blank=True, max_length=50, null=True, verbose_name='景点电话')),
                ('image', models.ImageField(blank=True, null=True, upload_to='attraction_images/', verbose_name='景点图片')),
            ],
        ),
        migrations.CreateModel(
            name='Scenic',
            fields=[
                ('scenic_id', models.IntegerField(choices=[(1, '西湖'), (2, '西溪湿地'), (3, '千岛湖'), (4, '良渚古城'), (5, '大明山')], primary_key=True, serialize=False)),
                ('scenic_name', models.CharField(max_length=255)),
                ('scenic_lng', models.FloatField()),
                ('scenic_lat', models.FloatField()),
                ('scale', models.IntegerField(blank=True, null=True, verbose_name='地图尺寸')),
                ('image', models.ImageField(blank=True, null=True, upload_to='scenic_images/', verbose_name='景区图片')),
            ],
        ),
        migrations.CreateModel(
            name='ScenicSpot',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='景点名称')),
                ('description', models.CharField(max_length=200, verbose_name='景点描述')),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('ticket_id', models.AutoField(primary_key=True, serialize=False)),
                ('ticket_date', models.DateField(blank=True, null=True, verbose_name='游玩日期')),
                ('ticket_count', models.PositiveIntegerField(default=1, verbose_name='购票数量')),
                ('price', models.IntegerField(verbose_name='价格')),
                ('status', models.SmallIntegerField(choices=[(0, '未支付'), (1, '已支付'), (2, '已完成'), (3, '已取消')], default=0, verbose_name='购票订单状态')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='购票订单创建时间')),
                ('attraction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scenic.attraction', verbose_name='所购景点')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=32, verbose_name='用户名')),
                ('password', models.CharField(max_length=64, verbose_name='密码')),
                ('phone', models.CharField(max_length=50, verbose_name='手机号')),
            ],
        ),
        migrations.CreateModel(
            name='Visitor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='游客姓名')),
                ('idcard', models.CharField(max_length=18, verbose_name='游客身份证号')),
                ('phone', models.CharField(max_length=15, verbose_name='游客手机号')),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='visitors', to='scenic.ticket')),
            ],
        ),
        migrations.CreateModel(
            name='TourRoute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('route_name', models.CharField(max_length=100, verbose_name='路线名称')),
                ('route_description', models.TextField(blank=True, null=True, verbose_name='路线描述')),
                ('status', models.BooleanField(default=False, verbose_name='路线状态')),
                ('scenic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scenic.scenic')),
            ],
        ),
        migrations.CreateModel(
            name='TourOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField()),
                ('attraction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scenic.attraction')),
                ('tour_route', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scenic.tourroute')),
            ],
        ),
        migrations.AddField(
            model_name='ticket',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scenic.user', verbose_name='购票用户'),
        ),
        migrations.CreateModel(
            name='StayRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_in_time', models.DateTimeField()),
                ('attraction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scenic.attraction')),
                ('scenic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scenic.scenic')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scenic.user')),
            ],
        ),
        migrations.CreateModel(
            name='RecommendationStrategy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('strategy_name', models.CharField(max_length=100, verbose_name='策略名称')),
                ('strategy_description', models.TextField(blank=True, null=True)),
                ('strategy_type', models.SmallIntegerField(choices=[(1, '按实时人数推荐'), (2, '按景点热度推荐'), (3, '自定义推荐列表'), (4, '组合策略'), (5, '个性化推荐')], verbose_name='推荐策略类型')),
                ('status', models.BooleanField(default=False, verbose_name='策略状态')),
                ('scenic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='custom_lists', to='scenic.scenic', verbose_name='所属景区')),
            ],
        ),
        migrations.CreateModel(
            name='RecommendationItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(verbose_name='推荐顺序')),
                ('attraction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scenic.attraction', verbose_name='推荐景点')),
                ('strategy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scenic.recommendationstrategy', verbose_name='所属推荐策略')),
            ],
        ),
        migrations.CreateModel(
            name='Footprint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_in_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('manual_check', models.BooleanField(default=False)),
                ('attraction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scenic.attraction')),
                ('scenic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scenic.scenic')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scenic.user')),
            ],
        ),
        migrations.CreateModel(
            name='ChatSession',
            fields=[
                ('session_id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created_time')),
                ('last_message_time', models.DateTimeField(auto_now=True, verbose_name='last_message_time')),
                ('active', models.BooleanField(default=True, verbose_name='active_status')),
                ('current_intent', models.CharField(blank=True, max_length=20, null=True)),
                ('scenic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='scenic.scenic', verbose_name='scenic')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scenic.user', verbose_name='user')),
            ],
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('message_id', models.AutoField(primary_key=True, serialize=False)),
                ('message_type', models.CharField(choices=[('user', 'user_message'), ('ai', 'ai_reply')], max_length=10, verbose_name='message_type')),
                ('content', models.TextField(verbose_name='content')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='timestamp')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='scenic.chatsession', verbose_name='session')),
            ],
            options={
                'ordering': ['timestamp'],
            },
        ),
        migrations.CreateModel(
            name='ChatIntent',
            fields=[
                ('intent_id', models.AutoField(primary_key=True, serialize=False)),
                ('intent_type', models.CharField(choices=[('route', 'route recommendation'), ('real_time', 'real-time info'), ('attraction_info', 'attraction info'), ('ticket_info', 'ticket info'), ('general', 'general message')], max_length=20, verbose_name='intent_type')),
                ('confidence', models.FloatField(default=0.0, verbose_name='confidence')),
                ('parameters', models.JSONField(blank=True, null=True, verbose_name='parameters')),
                ('message', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='intent', to='scenic.chatmessage', verbose_name='关联消息')),
            ],
        ),
        migrations.AddField(
            model_name='attraction',
            name='scenic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scenic.scenic', verbose_name='所属景区'),
        ),
    ]
